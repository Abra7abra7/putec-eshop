CREATE TABLE public.orders (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    user_id UUID REFERENCES auth.users(id),
    email TEXT,
    total_amount INT NOT NULL,
    status TEXT DEFAULT 'pending' NOT NULL,
    stripe_session_id TEXT UNIQUE NOT NULL
);

CREATE TABLE public.order_items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id BIGINT REFERENCES public.orders(id) ON DELETE CASCADE NOT NULL,
    product_id TEXT REFERENCES public.products(id) NOT NULL,
    price_id TEXT REFERENCES public.prices(id) NOT NULL,
    quantity INT NOT NULL,
    unit_price INT NOT NULL
);

ALTER TABLE public.orders ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.order_items ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Allow authenticated user to view their own orders" ON public.orders
FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Allow authenticated user to view their own order items" ON public.order_items
FOR SELECT USING (auth.uid() = (SELECT user_id FROM public.orders WHERE id = order_id));
